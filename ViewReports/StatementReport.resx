<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>select "StatementsReport"."RecID", "StatementsReport"."ClientNo",
       "StatementsReport"."DealNo", "StatementsReport"."TransID",
       "StatementsReport"."TransDate", "StatementsReport"."TransCode",
       "StatementsReport"."Amount", "StatementsReport"."BalBF",
       "StatementsReport"."BalCF", "StatementsReport"."Login",
       "StatementsReport"."MatchID", "StatementsReport"."Matched","StatementsReport"."qty", "StatementsReport"."price",
       "StatementsReport"."asset",
	   isnull("Clients"."CompanyName", '')+' '+isnull("Clients".Title, '')+' '+isnull("Clients"."FirstName", '')+' '+isnull("Clients"."Surname", '') as client,
	   isnull("Clients"."PhysicalAddress", '') as address1
  from "dbo"."StatementsReport" "StatementsReport"
join "dbo"."Clients" "Clients" on "StatementsReport"."ClientNo" = "Clients"."ClientNo"</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlN0YXRlbWVudHNSZXBvcnQiPjxGaWVsZCBOYW1lPSJSZWNJRCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IkNsaWVudE5vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkRlYWxObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUcmFuc0lEIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iVHJhbnNEYXRlIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iVHJhbnNDb2RlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkFtb3VudCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iQmFsQkYiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkJhbENGIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJMb2dpbiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJNYXRjaElEIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iTWF0Y2hlZCIgVHlwZT0iQm9vbGVhbiIgLz48RmllbGQgTmFtZT0icXR5IiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0icHJpY2UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9ImFzc2V0IiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNsaWVudCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJhZGRyZXNzMSIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxEQEBUQEBIVEBUWGBUYFRgVFRgYFxgWFhgYFhkXGhgY
        HiogGholGxgTITEhJykrLi4uGB8zODMsNygtLiv/2wBDAQoKCg4NDhoQEBswJSAjLzIwNS4tLTEtLSsv
        LS0tLS0tLSsvNy8tLS0tLS0tLS4tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACiATgDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAgQHAwEI/8QASBAAAQMCAwUEBwMHCgcBAAAAAQACAwQRBRIhBhMx
        QWEHFCJRMlNxgZGT0iNCoTM1UmJzscEVJFRydIKSo7LTFzSis9Hw8Qj/xAAZAQEAAwEBAAAAAAAAAAAA
        AAAAAQIDBAX/xAAoEQEBAAIBAwQBBAMBAAAAAAAAAQIREgMTITFRUmFBBCLR8DKBwXH/2gAMAwEAAhED
        EQA/AO4IiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiI
        CIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiKO2gxVlHSy1Mnox
        tLvaeQHUmw96SbFJ7S+0xuHO7tTNbLUWu4u9CMHhe3F3RZdke3cuJtmiqi3fRkOGRuUGJ2nC51Dhr/Wa
        uI0FHU4vXFrfHNM573E3sLAuNzyA0HwXtsPjhw3EYp3Xa1rjHMDfRjjlfcdOP91dt6OPDX5YTO7+n6tV
        O7VNoqjDqEVFMWh+9YzxtzCzg6+lx5BW9jgQCNQRcexc57e/zUP28X7nrlwm8pK2y9HP6XtRxyodaANl
        IFy2KmL9PMgEmy2Gdr2LU8uWqhjNuMb4nRO156m/4LX7EMVp6WsmfUzRwNMNg6R4YCcwNgXHisu2fauj
        r5YWUh3u6D88oFgc1vCCdSBY68NdF1ccefHj4Y7ut7dq2O2lixOlbUxAtvdr2Hix44t69DzW9jeLQ0cD
        6iodkjYLk8z5ADmSdAFR+w3BpqbD3PmaWb+TeMadDkytaCRyva6qP/6AxpzqiGiBIYxglcOTnPJa322D
        XfFc86cy6nGNOWsdtTH+13EKqXdYezcNJswNZvJneWliAegBWO/2sA3lqq1r+jEdLfo2/hdWzsJ2bjjp
        DXvaHSTOcGE65Y2Et08iXB1/YF1Sy0y6mOF1jIjHG2btcq7Jto8Wq6mWGtJMcTLv3kWSTO8+BulraBx4
        cl1ZfAF9WGeUt3IvJoREVUiIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiIC4v2+7R/k8Ojd5SzW/
        y2n8T8PNdexOuZTwyTyHKyNrnuPRouV+S8dxSStqpKl9y+V5IHEgHRrQOgsLLo/T4by37M+plqadY7F6
        SnoaaTEayWOAy+GPeODbRNNi4A6+J3PyHVVzb7A6CoqZaqixKk+0OYwufl8RHiLXcNTrY21J1U7sT2Pm
        VrJ8Tc4CwywA6gcg93L+qFatvtgaV+FyR0dPHDJF9rHkaASWA3BPF12lw1urc8ZnvaONuPo9+x3aDveH
        Nje68lOd07W92j0D1GWwv0Wl29fmoft4v3PXMOyDaHuWJMa82jnG6ffgDfwH3O0/vFdP7evzUP28X7nq
        uWHHqwl3i5H2ebIDFqh8BlMIYzOSG5idQLa+1TW1/ZxU4O0VsMzZ2Me3XJZzCT4SWm4cLrDsXxymoqya
        SqmbA10WVpdwJzA2+Csnaj2l0lTSPoqImUyEB78pDA0G5AJ4k9Fvlln3NT0Vkx4+Uz2Udo769/c6sDfh
        pcx7RYSNbxBbycBrpoR5Ln3bcwtxh9+ccRb7LEfvDltdhmESy4kKprTuoWSBz9bZntyhoPM63t5BW/ty
        2SkqGMr4G53RNLZWgeIx3uHAc8pv7is5xw6vhN3cFi7G5AcGp7W03oNuR3rzr14fFXZfm/sv7Qv5LLoZ
        mmSnkOY5fSY7gXAcwRa46LqMnbBhAFxLI48gIX39moWfU6WXK6i+OU0v6xkeGgk6AC59gVA2N7UIcSrX
        UrYnQgszRF7hmeW+kCBoNLHieBV/e0EEHUHQrLLG43VWll9HO6HbvEa4yPw3DmzQMeWCSWYRlzhxsPh8
        VZa/ahlHQMrcQYaclrM8bRnLZHfcFuOt9eCpGK7JV2DNmrMJqvsRmlkp5RdthcnKeenDgdOJUV2j4izE
        8AgxRzDHKH5AA45QS8sfpzF2aE6rXhLZr0V3XZ6SpEsbJG3s9rXC/GzgCL9dV9jqGOJa17XEcQHAke0D
        guQbbtOF4JTxUb3wirfHvXF7i7xQ5nZXE+EHKOHK6doWylPhNDHXUL3U9RE+Px53EzZtDmBNnH73saVW
        dOX8+qeTsTnW1OgVd232gdSYbPWUro5HxhuW/iZcva03ynyJ5qhbRVUmKYvRYdUPfBA+nZNJGxxY5z3M
        c4tcR5ZbfFS23Wy1Lh+CVopIzGHiEuGYkXbKwaX4dUmElmy3xVz2RxN9VQU9TLlD5YmPdlFm3cLmwJOi
        r+0W1lRT41RYfGIzFO27y5pL/v8AokOsPRHJc62Rq+/1NBRV7n00EVOw08dy1tS8aZnO8jY2HMC3NTfa
        Th7Z9oMOpy50bXx5SYzlcG5pLhpHC4Fvep7cmWqjl4dejna6+VzXW0NiDY+RtwX18gaCSQANSSbADquP
        bSYRHguKUEmHl7N+/JLFnLs7czQSQfO/xCxdgoxHaPEKSeWQU+WNz2MeW5yIow0X5AFzjpx0Udv878J5
        OxSTta3M5wa3zJAHxKbwFuZpBFrgjUH4LktLQsxXHKmlrC809GxrYoC8hrrWbmIHHz94XpsuHYfj8+GU
        73GlfCZBG5xcGOyNd4b8ONvYo7f8nJYeyfa2oxSmlmqRGHMlyDdtLRlyMdrdx1u4q8XX5e2axeRlF3Nx
        fT0s1U3vFQ0HwgsaN2LcD4bnoukdpbzTw0GHUYkMMzvEIn2fM0WIYJDzde5PNXz6X7tRWZeHVYahj75H
        NfbQ5SDY+WiyfK1ou4hoHEkgAe9ccwfCayHE6WaiwufD4cwZUtdK18b2ONi8jNxAub9AsMFwVuJY3iVN
        USS7mOXebtjy0Ofmytv0GunDVU7c91tuyTVDGWzuay/DMQL+y69QuMbb4bJBiU1ZiVJJiFC5rRGY3n+b
        gW1ygjUeLXrxXVdm6mCWkgfSuLoTG3dk3vlAyi99b6WPUKMsdSUl3UkiIqLCIiAiIgIiIIbavZ9mI0zq
        WSSSJji0uMRaHENN8viBFr2+Cruy/ZVQUFQKlplne30N8WFrT+kA1o8XUq9orTPKTUqNQCEIiqlzSr7F
        6B8rpWzVMRc8vAY6MBpJzWbdhIAPDVWvanZSLEaRtJPJKGtcx2ZhbnJYCBclpGt9dFYEVueXujjHLv8A
        gdh/9Iq/8UX+2tvDuxnDInZnmao8hJIAP8trb+9dGRW7ufujhGtQUMVPGIoY2xMbo1rAAB8FsEL6izWU
        baDsqw2seZMjqZ7jdzoHBt/O7XAt99lEDsPw/wDpFV/ii/211BFedTOflXjFY2d2Bw6gcJIIBvBwe8l7
        hpY2Ljp7lZJWZmltyLgi44i4tcdVmirbb6p05xJ2Vl143YpXOpzxic8EnoX8MvTKrJiGxdJNh4w3KY4Q
        BlynxNIN8wJBu699T5lWNFNzy9zjFOpNgIjQOw+rnlrWF2Zr36PjsAGhh1ta34laMPZixzoxWVtTXQwk
        GGGQtDBbhnsLv/DmOBV/ROeXucYq21+w9PiJZI50lPNF+TmhOV7RyHUX/wDq14thS6jno6quqaoT5Mz3
        FoLQwhwyAggcNb3uriicrrRqKfinZ5SVFJTUrnysNKGiGZjmtmGW33stuQPDiAssf7P6euljnnmnMkUW
        7a5rmtN73Elw2+cE30sOityJzyNRScC7O44KoVtTVTV8zNIjNazByIA+9x168FLUGyUMOIT4k18hlna1
        r2ktyANDW+EBt/uDiSrAiXK01FR2i2EjqakVsE8tDVAZTLFY5hw8TXaHTTlyXvstsVBQOkm3klTUTflJ
        pSC834gAaNF1YZ6uOP05GM0v4nAaDQnXlqPivsFQyQZmPa9vm0gj4hOWWtGoqOE9m9HT0M9Bmlmindnc
        ZC3M12VrQWlrRYjKDwWU3Z3TSULKCWWeVsRzQyuc3fRHkGuDQLDyI/crRFiEL3ZGSxudr4WvaTpx0Buv
        r66Jps6VjSDYgvaDe17WvxtyTlkais4DsdPTzRyzYnVVTYs2SN2VrCC0ts+1y+178RqAtzBdkYaStqa6
        N8jpKn02uLcg1v4bNB+JK98J2lhqamopoyCYCwF2dpD8zQ/wAG5AvYnzUvLK1gLnuDQOJcQAPaSluRNK
        fjuwslVJLfEaqOCY3lgbkLeAFmOIuxunDVWjB8MipII6aFuWONoa0Xvp1PmTc+9ekdbE5pe2Rjmji4OB
        aPaQbBV7Z3aaSuqpmwxxd1ic+MvMt5XPZoXCMCwjvcAk620unmw8LSiIqpEREBERAREQa1e+UNvC1r3X
        4PcWi3tAPRR/eK/1MPzXfQplFFi+Oep6SobvFf6mH5rvoTvFf6mH5rvoUyijj9rdyfGIbvFf6mH5rvoT
        vFf6mH5rvoUyicfs7k+MQ3eK/wBTD8130J3iv9TD8130KZROP2dyfGIbvFf6mH5rvoTvFf6mH5rvoUyi
        avudyfGIbvFf6mH5rvoTvFf6mH5rvoUyicb7ncnxiG7xX+ph+a76E7xX+ph+a76FMonG+53J8Yhu8V/q
        Yfmu+hO8V/qYfmu+hTKJxvudyfGIbvFf6mH5rvoTvFf6mH5rvoUyicb7ncnxiG7xX+ph+a76E7xX+ph+
        a76FMonG+53J8Yhu8V/qYfmu+hO8V/qYfmu+hTKJx+zuT4xExT1uYZoYQ2+pEriQOgyqWRFMmlMst/jT
        nk9LS1+PysqQ2QUtPG1scli0vkJc52U6OFiwe0KEnq4IJcRFKy9LK6mpWsgfumOqZDlflkAtGADZxHmr
        bh+xEMpqH4jBDUPlqJJWXGbKwhrWtzGx4Dhw1U/LgFI6n7o6njMGn2eUZNDcaed+a25SMtObNw4RYrh9
        OIKGmLC+Y93JMu7ZGRlkeQL3vfqWqY2BwCnnZLidRG2WSeeaSMyeLJGHFrbA6A2HFWam2Nw6IsMdJCws
        LiwtbYgvFna8dRopWhoY4I2wwsbHG0Wa1osAPKyi5+PCZipnZVhlPuJK1kMTHzT1JYWMAcyIyZRGCBo3
        wXtw1Cy2ijZVYvBRVRHd2QOnbG7Rk82bLZ3JwYADl/XCtGE4HTUmfu0LIN4cz8gtmd5n4lMYwOlrGhtV
        BHOGm7c7b2PQ8lHL92zXjSjxx0cGIV3d4o+7xUX85YwAQmYOc4NLR4c+QWU32YYHHS4dA4RMZLLG18jm
        gAuzXe0E2ubB3DlqpuHZ+kZTupGQRtgcCHRhtmuB43txUhFGGtDWgNAAAA4ADQAJcvGiRmiIqLCIiAiI
        gIiICIiAiIgIiICwkma22YgX4XPH2LUkxC7jHCN64ceTGn9Z3n0Gq88Jp5BmfM1uck2PE5b/AIDogr+K
        4bUyOfPUVJp4w6zGtuSBezdG8zp58VpVFbW4fIx0sjp4nWPiB1HNvi1a4DkrNHRymcl93R5y7xPuLAXZ
        ZvJwdry0HNReP0MtjLPLvYjIGvjA0YwnK1zT+kLg3/ggslBXRzsEkTg4H4joRyK2Vzitw+fC5BNE/PGS
        BfkRxyuH8VfY61pgE/BuTOegtc/xQbSwmkyNLjwAJPu1UVC+rnaJGujp2u1a0sL3ZTwLtQAegWFRVysz
        QT5XZ45DG9gtfKNQWk6G2uiCSjrA+ETNBsWZwDxta4umG1JlhjlIsXtDiBwFxdRWECbubc5Zk3AtYOze
        jpck2XyhrnR01NHG0PkkY3KCbNADRdzudhcIJ9FFbis476I/q7ogezNmvbrZeP8ALTzEzLGN6+R0WUnw
        h7b5iTxyi10E2iitxW8d9Ef1d0bezNmv77Lxlx/d00k0jCHxOyOYOb7gNAPkbjXqiccbldRN3RV9sWJE
        bzewNPHdbtxHsMma/vstSgxmrrS5sDWU+7OWVzxn+0HFrGgi4HmfNV5Np+ntlss1PX6/v0taKAp6+pgn
        ZDVFkjZbhkrBk8YF8rmkniOFivhxGpqZJI6XJEyJxY6V4LrvHENYCNBwJJTlEdm+/j3/AAsCKt1VZWUb
        RLO+OoizNDy1hjc0OIaCBch2p4L1nxGonnfBSlkbY7CSV4LvGRfK1oIvYEXueacjsX1lmvf8J9FWxX1g
        lNK10UsoAc+TKWtYw6C7QTdxN7C/AL0mZiMTTJvoajKL5N0Y7gcbODjY26JyOz9z+f79rAtTE8RipozJ
        M4Nb+JPkBzK+4bWCeFkzbgPaHAHiLi9lxnb3aR1RXujv9nF4WDlfm72n+C16eHK/Tm6uVw8flasS25me
        SIAIm8iRmd+Og+ChMZ2lr6XLLIajxatOXwe+4yj2K17EbMBrG1FQ27zYsafujkSPNXOWJrmlrgHA6EEX
        B9xXRn1enj4wxc2HR6mf7s8nI8F7V5muAqITIzm4EB492gP4LqmFYlFUxNmhcHsdw8x5gjkR5Kj7U9ns
        ZvNRtyni6Pkf6nkeiidhq91JUBhNo5CGvB4A8A63Ig6exV7U6mNyxX7vbymOTrKIEXM6RERAREQEREBE
        RAQhEQQOHNFKJYY4pJC12f0m2IeS5ti5wtbxD3FS8lRlZncHDQXABcQTys291lJTMc4Oc0EjgSNQozFc
        cbG7cwjfTnQMb90nm48gg98Mmmkc+R7TEw2EbHaO0vdxHK+mnRV3EKtrMQNLxina1srQeD33GYeR9G63
        MV2hfHalgG/qLAOIHha62p9v4Ba2BYEIZ2y1cgfPISWNvfWxJcTzI16IMtoonujiw9rt9I8g5iAC2NvN
        2vHrpwVgeY6am8foRsAOl7204dTy6qGxF7qfEG1DmPfG+PIS1pdlIPkNbf8AlSmIxd7piIzlLrFhc0jV
        pBFwdbaIMWT1bxdkUcItpvXEu97GjT4qKxaOYTwmaRrrsqLNYwtaPszc3JJN9FJsxeW1n0k2bnlDS2/R
        2bgsWUMszjNMAw5HMjYDfLm4ucebvZyQZ4b/AMhH+wH+hauHVoZDTsZHvZjE0gaDK2wuXOPotvb2r2w3
        etgFM+FzXMjLc12ljrDKLEG9z5WWtSUs1PuZhGZPsWRSsBGYZTcFt+OpNwgkLVrrfkIhzFnvI9h8I/BR
        eF4fvYXNMpEjKiVzZAADmBsTl4EG5FlIuxKd4yxU0jXfpS5WtHU2JJ9gWs7BpImxPiIkljc9zs2gk3v5
        QdOVvYg2N7XR+lHFOPNjix3+FwIv7wozGa1k0TLMMbhUwCVrgA4HMLZrcdOBUsMWfbWlnv5ZW/vzWt1U
        VW4ZO+8pZZz54HFgN8rIyBcnmbaquXo16Fk6ktWhV/ZQeOr/ALQ7/S1WC6h9nqR8b6kvblD5nOb1aQBf
        8EvrDC/sy/01drvTo/7VH/pesqbFJZS7uVOwx5nAyPdka51yHOaGgl2vM2uvXaaifM6myNzBk7HP6NDX
        An8QtDCJZ6Bndn00szWlxjkhDXBzXOLvECQQ7WyrfVvhJl05rzfZq7WQ1vdHunlhDQ6PwxxuuRnboXOd
        p7gpLZP8pW/2k/8AbjWNTDUV+Vj4jTQBzXPDyN5JlNw2zSQ0XAvrdbWztHJE+qL25Q+cvZ1bkYL/ABBS
        T9218s52bhdb+v8A2fw+VOJnfvipIGzSttvXkhjG8w1z7Ek25AG3vXlWRYg9j80kELS0+ixz3DTkXED8
        F5ZZqOomkbC+oincH/Z2L2PDQ0gtJF22aNVnVVlVVNMUMD6YO0dJNYFoOhysBNzbz0TfupMdauOtePN/
        v/Htsv8Am6Hz3Q19y5hs7gDanFIZHkZAC54P3nM1aOtyf+ldjoKNsMTIWeixoaL+QFlynaOF9DVm1265
        43dCb6ezguz9NJcbhfV5n6zO9zuT03XXgvqquy22cNVaORwjm8idHdWnz6K1XWGWNxuq1xymU3ArjuOY
        nDLiU0cIADHNuRwc77x6eLTTyVz2+2pFLE6GJ15nC2n3AeZ6+QXK+znCn1WJjQljWl0pPlcEA9SRZdHR
        twvKsOtJ1Jxj9BBfURczpEREBERAREQEREBERB8cNFo4VhbKdlm6uOr3n0nOPEkrfRBAbIYduoTI4fay
        OcXk+lo4i3/vmvXGMDdNMyeKUwyMFgbZgR7L9SppEGjQQTtJM0zZByDY8v43K3kRAREQEREBERAREQER
        EHxfURAREQEREBQ21GzsVfDu5LtcNWPHFp/iPMKZRTLr0RZtwbGezrEYXHKWysvo9ma/S7QLgqWwLE8T
        p2GF9Q+W+gDmXc3o0nxfFdjXyy2x60n+WO2OXRyv+OWnIYtkayscS5pjBN3PluD1NjqSuj7M7PQUEW6h
        Gp1e8+k93mf4DkphFTqdW53yt0+lMIIiLNqIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICI
        iAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICI
        iAiIgIiICIiD/9k=
</value>
  </data>
</root>